# Generated by Django 5.2.6 on 2025-09-14 00:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResumeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name', max_length=200)),
                ('city', models.CharField(help_text='City of residence', max_length=100)),
                ('email', models.EmailField(help_text='Email address', max_length=254)),
                ('phone', models.CharField(help_text='Phone number', max_length=20)),
                ('links', models.TextField(blank=True, help_text='Links (GitHub, LinkedIn, portfolio, etc.) - one per line', null=True)),
                ('summary', models.TextField(blank=True, help_text='Professional summary or objective', null=True)),
                ('skills', models.TextField(blank=True, help_text='Skills - one per line or comma-separated', null=True)),
                ('custom_markdown', models.TextField(blank=True, help_text='Custom resume markdown (user-edited version)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this template was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this template was last updated')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='School or university name', max_length=200)),
                ('degree', models.CharField(help_text='Degree or certification', max_length=200)),
                ('field_of_study', models.CharField(blank=True, help_text='Field of study or major', max_length=200, null=True)),
                ('location', models.CharField(blank=True, help_text='Institution location', max_length=200, null=True)),
                ('start_date', models.DateField(help_text='Start date')),
                ('end_date', models.DateField(blank=True, help_text='End date or graduation date', null=True)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, help_text='GPA (if applicable)', max_digits=3, null=True)),
                ('is_current', models.BooleanField(default=False, help_text='Is this current education?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display (higher numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this education was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this education was last updated')),
            ],
            options={
                'ordering': ['-order', '-start_date'],
                'unique_together': {('institution', 'degree', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(help_text='Company name', max_length=200)),
                ('position', models.CharField(help_text='Job title or position', max_length=200)),
                ('location', models.CharField(blank=True, help_text='Work location', max_length=200, null=True)),
                ('start_date', models.DateField(help_text='Start date of employment')),
                ('end_date', models.DateField(blank=True, help_text='End date (leave blank if current)', null=True)),
                ('is_current', models.BooleanField(default=False, help_text='Is this current position?')),
                ('description', models.TextField(help_text='Job description and responsibilities')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display (higher numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this experience was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this experience was last updated')),
            ],
            options={
                'ordering': ['-order', '-start_date'],
                'unique_together': {('company', 'position', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='Name of the company', max_length=200)),
                ('position', models.CharField(help_text='Job title or position name', max_length=200)),
                ('job_url', models.URLField(blank=True, help_text='URL to the job posting', null=True)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('interview', 'Interview'), ('rejected', 'Rejected'), ('accepted', 'Accepted'), ('withdrawn', 'Withdrawn')], default='applied', help_text='Current status of the application', max_length=20)),
                ('applied_date', models.DateField(help_text='Date when the application was submitted')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the application', null=True)),
                ('meeting_minutes', models.TextField(blank=True, help_text='Meeting notes or interview minutes related to this job', null=True)),
                ('salary_range', models.CharField(blank=True, help_text='Salary range if available', max_length=100, null=True)),
                ('location', models.CharField(blank=True, help_text='Job location', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('user', models.ForeignKey(help_text='User who submitted this application', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_date'],
                'unique_together': {('user', 'company_name', 'position')},
            },
        ),
        migrations.CreateModel(
            name='MeetingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Content of the meeting note')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this meeting note was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this meeting note was last updated')),
                ('job_application', models.ForeignKey(help_text='Job application related to this meeting note', on_delete=django.db.models.deletion.CASCADE, to='job_tracker.jobapplication')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Project name', max_length=200)),
                ('description', models.TextField(help_text='Project description')),
                ('technologies', models.CharField(blank=True, help_text='Technologies used (comma-separated)', max_length=500, null=True)),
                ('url', models.URLField(blank=True, help_text='Project URL or repository', null=True)),
                ('start_date', models.DateField(help_text='Project start date')),
                ('end_date', models.DateField(blank=True, help_text='Project end date', null=True)),
                ('is_ongoing', models.BooleanField(default=False, help_text='Is this project ongoing?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display (higher numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this project was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this project was last updated')),
            ],
            options={
                'ordering': ['-order', '-start_date'],
                'unique_together': {('name', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Notification title', max_length=200)),
                ('message', models.TextField(help_text='Notification message content')),
                ('show_date', models.DateTimeField(help_text='When to show this notification')),
                ('is_read', models.BooleanField(default=False, help_text='Whether the user has read this notification')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this notification is still active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this notification was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this notification was last updated')),
                ('job_application', models.ForeignKey(help_text='Job application related to this notification', on_delete=django.db.models.deletion.CASCADE, to='job_tracker.jobapplication')),
                ('user', models.ForeignKey(help_text='User who receives this notification', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'job_application', 'title')},
            },
        ),
    ]
